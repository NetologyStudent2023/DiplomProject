#Область ОписаниеПеременных
&НаСервере
Перем ДатаПроведенияРаботВДокументе;
&НаСервере
Перем ВремяНачалаРаботВДокументе;
&НаСервере
Перем ВремяОкончанияРаботВДокументе;
&НаСервере
Перем СпециалистВДокументе;
&НаСервере
Перем ЭтоНовыйДокумент; 
&НаСервере
Перем Дата;
&НаСервере
Перем Номер;
#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	ПередЗаписьюНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот,
	|	ВКМ_ОбслуживаниеКлиента.ВремяНачалаРабот,
	|	ВКМ_ОбслуживаниеКлиента.ВремяОкончанияРабот,
	|	ВКМ_ОбслуживаниеКлиента.Специалист,
	|	ВКМ_ОбслуживаниеКлиента.Дата,
	|	ВКМ_ОбслуживаниеКлиента.Номер
	|ИЗ
	|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
	|ГДЕ
	|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда

		ДатаПроведенияРаботВДокументе = Выборка.ДатаПроведенияРабот;
		ВремяНачалаРаботВДокументе = Выборка.ВремяНачалаРабот;
		ВремяОкончанияРаботВДокументе = Выборка.ВремяОкончанияРабот;
		СпециалистВДокументе = Выборка.Специалист;
		ЭтоНовыйДокумент = Ложь;
		Дата = Выборка.Дата;
		Номер = Выборка.Номер;
	Иначе
		ЭтоНовыйДокумент = Истина;
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ЕстьИзмененияВЗаказе = Ложь;
	
	Если ЭтоНовыйДокумент Тогда
		ТекстСообщения = СтрШаблон("Новый заказ № %1 от %2: специалист %3, дата и время проведения работ - %4 с %5 по %6", ТекущийОбъект.Номер, 
					                Формат(ТекущийОбъект.Дата, "ДФ=dd.MM.yyyy;"), ТекущийОбъект.Специалист, 
					                Формат(ТекущийОбъект.ДатаПроведенияРабот, "ДФ=dd.MM.yyyy;"), 
					                Формат(ТекущийОбъект.ВремяНачалаРабот, "ДЛФ=T;"), Формат(ТекущийОбъект.ВремяОкончанияРабот, "ДЛФ=T;"));
		НовоеУведомление = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
		НовоеУведомление.Текст = ТекстСообщения;
		НовоеУведомление.Записать();
		Возврат;
	КонецЕсли;
		
	Если СпециалистВДокументе <> ТекущийОбъект.Специалист Тогда
		ТекстСпециалист = СтрШаблон("специалист - %1,", ТекущийОбъект.Специалист);
		ЕстьИзмененияВЗаказе = Истина;
	Иначе
		ТекстСпециалист = "специалист тот же, ";
	КонецЕсли;
				
	Если ДатаПроведенияРаботВДокументе <> ТекущийОбъект.ДатаПроведенияРабот Тогда
		ТекстДатаРабот = СтрШаблон("дата проведения работ - %1, ", Формат(ТекущийОбъект.ДатаПроведенияРабот, "ДФ=dd.MM.yyyy;"));
		ЕстьИзмененияВЗаказе = Истина;
	Иначе
		ТекстДатаРабот = "дата проведения работ не изменилась, ";
	КонецЕсли;
		
	Если ВремяНачалаРаботВДокументе <> ТекущийОбъект.ВремяНачалаРабот Тогда
		ТекстВремяНачалаРабот = СтрШаблон("время начала проведения работ - %1, ", Формат(ТекущийОбъект.ВремяНачалаРабот, "ДЛФ=T;"));
		ЕстьИзмененияВЗаказе = Истина;
	Иначе
		ТекстВремяНачалаРабот = "время начала проведения работ не изменилось";
	КонецЕсли;

	Если ВремяОкончанияРаботВДокументе <> ТекущийОбъект.ВремяОкончанияРабот Тогда
		ТекстВремяОкончанияРабот = СтрШаблон("время окончания проведения работ - %1", Формат(ТекущийОбъект.ВремяОкончанияРабот, "ДЛФ=T;"));
		ЕстьИзмененияВЗаказе = Истина;
	Иначе
		ТекстВремяОкончанияРабот = "время окончания проведения работ не изменилось";
	КонецЕсли;
	
	Если ЕстьИзмененияВЗаказе Тогда
		ТекстСообщения = СтрШаблон("Заказ № %1 от %2 изменен: ", Номер, Формат(Дата, "ДФ=dd.MM.yyyy;")) + ТекстСпециалист + ТекстДатаРабот + ТекстВремяНачалаРабот + ТекстВремяОкончанияРабот;
		НовоеУведомление = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
		НовоеУведомление.Текст = ТекстСообщения;
		НовоеУведомление.Записать(); 
	КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
#КонецОбласти


